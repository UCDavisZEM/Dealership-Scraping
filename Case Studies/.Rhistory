inventoryLinks[[750]]
inventoryLinks[[740]]
inventoryLinks[[745]]
inventoryLinks[[748]]
inventoryLinks[[746]]
inventoryLinks[[747]]
inventoryLinks[[748]]
inventoryLinks[748:780] = lapply(requests[748:780], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[781:820] = lapply(requests[781:820], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[781:820] = lapply(requests[781:820], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[821:850] = lapply(requests[821:850], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[851:880] = lapply(requests[851:880], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[881:930] = lapply(requests[881:930], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[931:950] = lapply(requests[931:950], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[951:980] = lapply(requests[951:980], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[[961]]
inventoryLinks[[965]]
inventoryLinks[[975]]
inventoryLinks[[970]]
inventoryLinks[[967]]
inventoryLinks[[966]]
inventoryLinks[[968]]
inventoryLinks[[969]]
inventoryLinks[[968]]
length(request)
length(requests)
inventoryLinks[968:1074] = lapply(requests[968:1074], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[[980]]
inventoryLinks[[985]]
inventoryLinks[[988]]
inventoryLinks[[998]]
inventoryLinks[[1000]]
inventoryLinks[[1020]]
inventoryLinks[[1030]]
inventoryLinks[[1034]]
inventoryLinks[[1044]]
inventoryLinks[[1054]]
inventoryLinks[[1058]]
inventoryLinks[[1055]]
inventoryLinks[[1054]]
inventoryLinks[[1056]]
inventoryLinks[[1055]]
inventoryLinks[[1054]]
inventoryLinks[[1057]]
inventoryLinks[[1058]]
inventoryLinks[[1059]]
inventoryLinks[1058:1074] = lapply(requests[1058:1074], scrapeInventoryLink) #there are some unrelevant links in it
inventoryLinks[1058:1074] = lapply(requests[1058:1074], scrapeInventoryLink) #there are some unrelevant links in it
requests[1075]
requests[1074]
authorized_ls = as.vector(sapply(inventoryLinks,clean_links))
NissanDealers$IV_link = authorized_ls
View(NissanDealers)
write.csv(NissanDealers, "NissanDealers.csv",row.names=F)
setwd("~/Desktop/InternPI/Dealership-Scraping/CollectDealerInfor")
load("hondapossiblelinks.rdata")
inventoryLinks = load("hondapossiblelinks.rdata")
load("hondapossiblelinks.rdata")
inventoryLinks[[1]]
authorized_ls = as.vector(sapply(inventoryLinks,clean_links))
load("hondaDealers.rdata")
HondaDealers$IV_link = authorized_ls
write.csv(HondaDealers, "HondaDealers.csv",row.names=F)
View(HondaDealers)
setwd("~/Desktop/InternPI/Dealership-Scraping/MATestCase")
setwd("~/Desktop/InternPI/Dealership-Scraping/Case Studies")
url = "http://www.chapmanbmwoncamelback.com/bmw-cars.asp"
baselink = substr(url, 1, gregexpr("/",url)[[1]][3])
baselink
doc = htmlParse(url)
model.linknode = getNodeSet(doc, "//a[@class='model']")
model.linknode
getdatacontent.24 = function(node, content){  tt = xmlAttrs(node)[content]  return(tt)}
getdatacontent.24 = function(node, content){  tt = xmlAttrs(node)[content]  return(tt)}
getdatacontent.24 = function(node, content){  tt = xmlAttrs(node)[content]  return(tt)}
getdatacontent.24 = function(node, content){
tt = xmlAttrs(node)[content]
return(tt)
}
getdatacontent.24 = function(node, content){  tt = xmlAttrs(node)[content]  return(tt)}
getdatacontent.24 = function(node, content)  {  tt = xmlAttrs(node)[content]  return(tt)}
getdatacontent.24 = function(node, content){  tt = xmlAttrs(node)[content]  return(tt)}
getdatacontent.24 = function(node, content){  tt = xmlAttrs(node)[content]  return(tt)}
getdatacontent.24 = function(node, content){  tt = xmlAttrs(node)[content]  return(tt)}
getLinklist.24 = function(url){  baselink = substr(url, 1, gregexpr("/",url)[[1]][3])  doc = htmlParse(url)  model.linknode = getNodeSet(doc, "//a[@class='model']")  model.links = paste0(baselink, unname(sapply(model.linknode, getdatacontent.24, content = "href")), "#?pageSize=50")}
getLinklist.24 = function(url){
baselink = substr(url, 1, gregexpr("/",url)[[1]][3])
doc = htmlParse(url)
model.linknode = getNodeSet(doc, "//a[@class='model']")
model.links = paste0(baselink, unname(sapply(model.linknode, getdatacontent.24, content = "href")), "#?pageSize=50")
}
links = getLinklist.24(url)
links
require(RSelenium)
require(XML)
require(plyr)
RSelenium::startServer()
checkForServer()
remDr = remoteDriver(browserName = "firefox")
remDr$open(silent = TRUE)
url = "http://www.chapmanbmwoncamelback.com/BMW-2-Series-Phoenix#?pageSize=50"
remDr$navigate(url)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
carlinks
url = "http://www.chapmanbmwoncamelback.com/BMW-3-Series-Phoenix"
remDr$navigate(url)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
carlinks
url = "http://www.chapmanbmwoncamelback.com/BMW-3-Series-Phoenix#?pageSize=100"
remDr$navigate(url)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
url = "http://www.chapmanbmwoncamelback.com/BMW-3-Series-Phoenix#?pageSize=50"
remDr$navigate(url)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
count = remDr$findElements('xpath','//span[@class="blue ng-binding"]')$getElementText()
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = countElem$$getElementText()
count = countElem$getElementText()
countElem
count = unlist(lapply(countElem, function(x){x$getElementText()}))
count
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
count
pages = floor(count/50)
pages
pages = ceiling(count/50)
pages
0:5
pages = floor(count/50)
0:pages
pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))
pagelinks
pages = 0
pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))
pagelinks
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))
pagelinks
carlinks = list()
i = 0
for(link in pagelinks){      i = i+1      remDr$navigate(link)      webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')      carlinks[[i]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))          }
for(link in pagelinks){      i = i+1      remDr$navigate(link)      webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')      carlinks[[i]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))          }
for(link in pagelinks){
i = i+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[i]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
carlinks
url = "http://www.chapmanbmwoncamelback.com/BMW-3-Series-Phoenix-2015-BMW-328i+Sedan-151084.htm"
doc = htmlParse(url)
getNodeSet(doc,path = '//input[@name="vin"]/text()')
getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="vin"]/text()')
getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="vin"]')
vinNodes = getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="vin"]')
xmlSApply(vinNodes, xmlGetAttr, name='value')
makeNode = getNodeSet(doc,path='//form[@class="detailForm"]/input[@name="make"]')
makeNodes = getNodeSet(doc,path='//form[@class="detailForm"]/input[@name="make"]')
make = xmlSApply(makeNodes, xmlGetAttr, name='value')
make
yearNodes =  getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="year"]')
year = xmlSApply(yearNodes, xmlGetAttr, name='value')
year
model = "NA"
trim = "NA"
df <- data.frame(vins,make,model,trim,as.numeric(year), stringsAsFactors = F)
df <- data.frame(vin,make,model,trim,as.numeric(year), stringsAsFactors = F)
vin = xmlSApply(vinNodes, xmlGetAttr, name='value')
df <- data.frame(vin,make,model,trim,as.numeric(year), stringsAsFactors = F)
colnames(df) <- c("VIN", "Make", "Model", "Trim", "Year")
df
url = "http://www.chapmanbmwoncamelback.com/bmw-cars.asp"
links = getLinklist.24(url)
links
getallcarlinks.24 = function(url){  RSelenium::startServer()  checkForServer()  remDr = remoteDriver(browserName = "firefox")  remDr$open(silent = TRUE)      remDr$navigate(url)    countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')  count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))  pages = floor(count/50)    pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))    if(length(pagelinks)==1){    webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')    carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))  }  else{    carlinks = list()    i = 0    for(link in pagelinks){      i = i+1      remDr$navigate(link)      webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')      carlinks[[i]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))          }    carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))  }   return(carlinks)}
getallcarlinks.24 = function(url){
RSelenium::startServer()
checkForServer()
remDr = remoteDriver(browserName = "firefox")
remDr$open(silent = TRUE)
remDr$navigate(url)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
i = 0
for(link in pagelinks){
i = i+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[i]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
return(carlinks)
}
carlinks = ldply(links, getallcarlinks.24)
RSelenium::startServer()
checkForServer()
remDr = remoteDriver(browserName = "firefox")
getallcarlinks.24 = function(url){
remDr$navigate(url)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
i = 0
for(link in pagelinks){
i = i+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[i]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
return(carlinks)
}
remDr$open(silent = TRUE)
carlinks = ldply(links, getallcarlinks.24)
url = "http://www.chapmanbmwoncamelback.com/BMW-3-Series-Phoenix#?pageSize=50"
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pages
pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))
length(pagelinks)
carlinks = ldply(links, getallcarlinks.24)
allcarlinks = list()
i = 0
for(carlink in links) {
i = i+1
allcarlinks[[i]] = getallcarlinks.24(carlink)
}
RSelenium::startServer()
remDr = remoteDriver(browserName = "firefox")
remDr$open(silent = TRUE)
allcarlinks = list()
i = 0
for(carlink in links) {
i = i+1
allcarlinks[[i]] = getallcarlinks.24(carlink)
}
allcarlinks = list()
i = 0
for(carlink in links) {
i = i+1
remDr$navigate(url)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
p = 0
for(link in pagelinks){
p = p+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[p]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
allcarlinks[[i]] = carlinks
}
RSelenium::startServer()
remDr$open(silent = TRUE)
allcarlinks = list()
i = 0
for(carlink in links) {
i = i+1
remDr$navigate(url)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(url,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
p = 0
for(link in pagelinks){
p = p+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[p]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
allcarlinks[[i]] = carlinks
}
links
for(carlink in links) {
i = i+1
remDr$navigate(carlink)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(carlink,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
p = 0
for(link in pagelinks){
p = p+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[p]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
allcarlinks[[i]] = carlinks
}
RSelenium::startServer()
remDr = remoteDriver(browserName = "firefox")
remDr$open(silent = TRUE)
allcarlinks = list()
i = 0
for(carlink in links) {
i = i+1
remDr$navigate(carlink)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(carlink,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
p = 0
for(link in pagelinks){
p = p+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[p]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
allcarlinks[[i]] = carlinks
}
for(carlink in links) {
i = i+1
remDr$navigate(carlink)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(carlink,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
p = 0
for(link in pagelinks){
p = p+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[p]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
print(carlinks)
allcarlinks[[i]] = carlinks
}
RSelenium::startServer()
checkForServer()
remDr = remoteDriver(browserName = "firefox")
remDr$open(silent = TRUE)
allcarlinks = list()
i = 0
for(carlink in links) {
i = i+1
remDr$navigate(carlink)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
pages = floor(count/50)
if(length(pagelinks)==1){
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
pagelinks = sapply(0:pages,function(num) paste0(carlink,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
p = 0
for(link in pagelinks){
p = p+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[p]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
print(carlinks)
allcarlinks[[i]] = carlinks
}
for(carlink in links) {
i = i+1
remDr$navigate(carlink)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(carlink,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
p = 0
for(link in pagelinks){
p = p+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[p]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
print(carlinks)
allcarlinks[[i]] = carlinks
}
for(carlink in links) {
i = i+1
remDr$navigate(carlink)
Sys.sleep(2)
countElem = remDr$findElements('xpath','//span[@class="blue ng-binding"]')
count = as.numeric(unlist(lapply(countElem, function(x){x$getElementText()})))
pages = floor(count/50)
pagelinks = sapply(0:pages,function(num) paste0(carlink,'&currentPage=',num))
if(length(pagelinks)==1){
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
else{
carlinks = list()
p = 0
for(link in pagelinks){
p = p+1
remDr$navigate(link)
webElems = remDr$findElements('xpath','//div[@class="topLine clear"]/a[1]')
carlinks[[p]] = unlist(lapply(webElems, function(x){x$getElementAttribute("href")}))
}
carlinks = unlist(lapply(1:length(carlinks), function(i) {carlinks[[i]]}))
}
print(carlinks)
allcarlinks[[i]] = carlinks
}
allcarlinks = unlist(lapply(1:length(allcarlinks), function(i) {allcarlinks[[i]]}))
scrapeInfo.24 = function(url){
doc = htmlParse(url)
vinNodes = getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="vin"]')
vin = xmlSApply(vinNodes, xmlGetAttr, name='value')
makeNodes = getNodeSet(doc,path='//form[@class="detailForm"]/input[@name="make"]')
make = xmlSApply(makeNodes, xmlGetAttr, name='value')
yearNodes =  getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="year"]')
year = xmlSApply(yearNodes, xmlGetAttr, name='value')
model = "NA"
trim = "NA"
df <- data.frame(vin,make,model,trim,as.numeric(year), stringsAsFactors = F)
colnames(df) <- c("VIN", "Make", "Model", "Trim", "Year")
return(df)
}
cardata = ldply(carlinks, scrapeInfo.24)
cardata = ldply(allcarlinks, scrapeInfo.24)
scrapeInfo.24 = function(url){  doc = htmlParse(url)  vinNodes = getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="vin"]')  vin = xmlSApply(vinNodes, xmlGetAttr, name='value')    makeNodes = getNodeSet(doc,path='//form[@class="detailForm"]/input[@name="make"]')  make = xmlSApply(makeNodes, xmlGetAttr, name='value')    yearNodes =  getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="year"]')  year = xmlSApply(yearNodes, xmlGetAttr, name='value')    model = "NA"  trim = "NA"  df <- data.frame(vin,make,model,trim,as.numeric(year), stringsAsFactors = F)  colnames(df) <- c("VIN", "Make", "Model", "Trim", "Year")  free(doc)  return(df)}
scrapeInfo.24 = function(url){
doc = htmlParse(url)
vinNodes = getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="vin"]')
vin = xmlSApply(vinNodes, xmlGetAttr, name='value')
makeNodes = getNodeSet(doc,path='//form[@class="detailForm"]/input[@name="make"]')
make = xmlSApply(makeNodes, xmlGetAttr, name='value')
yearNodes =  getNodeSet(doc,path = '//form[@class="detailForm"]/input[@name="year"]')
year = xmlSApply(yearNodes, xmlGetAttr, name='value')
model = "NA"
trim = "NA"
df <- data.frame(vin,make,model,trim,as.numeric(year), stringsAsFactors = F)
colnames(df) <- c("VIN", "Make", "Model", "Trim", "Year")
free(doc)
return(df)
}
allcarlinks
cardata = ldply(allcarlinks, scrapeInfo.24)
head(cardata)
