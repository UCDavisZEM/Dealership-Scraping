href
href[grep("page|start",href)]
nextLinks = href[grep("page|start",href)]
install.packages("jsonlite")
library(jsonlite)
json <-
'[
{"Name" : "Mario", "Age" : 32, "Occupation" : "Plumber"},
{"Name" : "Peach", "Age" : 21, "Occupation" : "Princess"},
{},
{"Name" : "Bowser", "Occupation" : "Koopa"}
]'
mydf <- fromJSON(json)
mydf
substring(myjson, 1, 100)
mtcars
json <-
'{
{"Name" : "Mario", "Age" : 32, "Occupation" : "Plumber"},
{"Name" : "Peach", "Age" : 21, "Occupation" : "Princess"},
{},
{"Name" : "Bowser", "Occupation" : "Koopa"}
}'
mydf <- fromJSON(json)
json <-
'[
{"Name" : "Mario", "Age" : 32, "Occupation" : "Plumber"},
{"Name" : "Peach", "Age" : 21, "Occupation" : "Princess"},
{},
{"Name" : "Bowser", "Occupation" : "Koopa"}
]'
mydf <- fromJSON(json)
mydf
json <-
"[
{vehicleID:'1123724',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/1123724',dateAdded: '2015-06-19 00:00:00.0',vin: '1G1PC5SBXF7296543',stockNumber: 'Q1143',status: 'New',vehicleYear: '2015',make: 'Chevrolet',model: 'Cruze',modelCode: '1PX69',trim: '1LT Auto',driveTrain: 'FWD',previewPhoto: 'http://cache.automotive.stringcontent.com/cotillion/vehicle_photos/fe33c26872b4447da0e549f416e788ef.jpg',videoURL: '',odometer: '10',transmission: 'Automatic',transmissionType: 'Automatic',bodyStyle: 'Sedan',rawBodyStyle: '',doorsType: '',exteriorColor: 'Silver Ice Metallic',exteriorColorHex: 'c1c2c6',interiorColor: 'Jet Blk Premium',interiorColorHex: '',engine: '1.4L I-4',certificationProgramImage: '',certificationProgramName: '',rebate: '',cityMPG: '26',hwyMPG: '38',isSpecial: '0',certifications: {dealerCertification: {certificationPhoto: '',certificationLink: ''},thirdPartyCertification: {certificationPhoto: '',certificationLink: ''}},externalCommentsHeader: '',externalCommentsBody: '',externalCommentsFooter: '',pictureCount: '0',pictures: [],standardFeatures: [],optionPackages: [{optionPackageName: 'Technology Package',optionPackageItems: [{ optionPackageItem: 'USB Port Audio Interface Delete' },{ optionPackageItem: 'Radio: Chevrolet MyLink AM/FM Stereo w/CD Player' },{ optionPackageItem: 'Chevrolet MyLink' },{ optionPackageItem: 'Rear Vision Camera' }]},{optionPackageName: '1LT Driver Convenience Package',optionPackageItems: [{ optionPackageItem: 'Driver 6-Way Power Seat Adjuster (Fleet)' },{ optionPackageItem: 'Remote Vehicle Starter System' },{ optionPackageItem: 'Driver/Front Passenger Illuminated Vanity Mirrors' },{ optionPackageItem: 'Auto Dimming Inside Rearview Mirror' },{ optionPackageItem: 'Outside Heated Power-Adjustable Body-Color Mirrors' }]}],installedOptions: [{ installedOptionName: 'Engine: ECOTEC Turbo 1.4L DOHC VVT 4-Cylinder SMFI' },{ installedOptionName: 'Transmission: Electronic 6-Speed Automatic w/OD' },{ installedOptionName: 'CT/DE/ME/MD/MA/NJ/NY/OR/PA/RI/VT/WA Emissions Req' },{ installedOptionName: 'Cargo Net (LPO)' }],priceOne : {priceLabel:'MSRP',labelColor:'',strikeThrough:'true',price:'$22,210'},priceTwo : {priceLabel:'Internet Price',labelColor:'',price:'Contact Us'}},
{vehicleID:'927000',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/927000',dateAdded: '2015-02-07 00:00:00.0',vin: '1G1PC5SB9F7168973',stockNumber: 'Q0694',status: 'New',vehicleYear: '2015',make: 'Chevrolet',model: 'Cruze',modelCode: '1PX69',trim: '1LT Auto',driveTrain: 'FWD',previewPhoto: 'http://cache.automotive.stringcontent.com/cotillion/vehicle_photos/994b2869e88d446baa6f103c7c253137.jpg',videoURL: '',odometer: '10',transmission: 'Automatic',transmissionType: 'Automatic',bodyStyle: 'Sedan',rawBodyStyle: '',doorsType: '',exteriorColor: 'Tungsten Metallic',exteriorColorHex: '333230',interiorColor: 'Jet Blk Premium',interiorColorHex: '',engine: '1.4L I-4',certificationProgramImage: '',certificationProgramName: '',rebate: '',cityMPG: '26',hwyMPG: '38',isSpecial: '0',certifications: {dealerCertification: {certificationPhoto: '',certificationLink: ''},thirdPartyCertification: {certificationPhoto: '',certificationLink: ''}},externalCommentsHeader: '',externalCommentsBody: '',externalCommentsFooter: '',pictureCount: '0',pictures: [],standardFeatures: [],optionPackages: [{optionPackageName: 'Technology Package',optionPackageItems: [{ optionPackageItem: 'USB Port Audio Interface Delete' },{ optionPackageItem: 'Radio: Chevrolet MyLink AM/FM Stereo w/CD Player' },{ optionPackageItem: 'Chevrolet MyLink' },{ optionPackageItem: 'Rear Vision Camera' }]},{optionPackageName: '1LT Driver Convenience Package',optionPackageItems: [{ optionPackageItem: 'Driver 6-Way Power Seat Adjuster (Fleet)' },{ optionPackageItem: 'Remote Vehicle Starter System' },{ optionPackageItem: 'Driver/Front Passenger Illuminated Vanity Mirrors' },{ optionPackageItem: 'Auto Dimming Inside Rearview Mirror' },{ optionPackageItem: 'Outside Heated Power-Adjustable Body-Color Mirrors' }]}],installedOptions: [{ installedOptionName: 'Engine: ECOTEC Turbo 1.4L DOHC VVT 4-Cylinder SMFI' },{ installedOptionName: 'Transmission: Electronic 6-Speed Automatic w/OD' },{ installedOptionName: 'CT/DE/ME/MD/MA/NJ/NY/OR/PA/RI/VT/WA Emissions Req' },{ installedOptionName: 'Cargo Net (LPO)' }],priceOne : {priceLabel:'MSRP',labelColor:'',strikeThrough:'true',price:'$22,210'},priceTwo : {priceLabel:'Internet Price',labelColor:'',price:'$18,878'}}
]"
mydf <- fromJSON(json,flatten = TRUE)
json <-
'[
{vehicleID:'1123724',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/1123724',dateAdded: '2015-06-19 00:00:00.0',vin: '1G1PC5SBXF7296543',stockNumber: 'Q1143',status: 'New',vehicleYear: '2015',make: 'Chevrolet',model: 'Cruze',modelCode: '1PX69',trim: '1LT Auto',driveTrain: 'FWD',previewPhoto: 'http://cache.automotive.stringcontent.com/cotillion/vehicle_photos/fe33c26872b4447da0e549f416e788ef.jpg',videoURL: '',odometer: '10',transmission: 'Automatic',transmissionType: 'Automatic',bodyStyle: 'Sedan',rawBodyStyle: '',doorsType: '',exteriorColor: 'Silver Ice Metallic',exteriorColorHex: 'c1c2c6',interiorColor: 'Jet Blk Premium',interiorColorHex: '',engine: '1.4L I-4',certificationProgramImage: '',certificationProgramName: '',rebate: '',cityMPG: '26',hwyMPG: '38',isSpecial: '0',certifications: {dealerCertification: {certificationPhoto: '',certificationLink: ''},thirdPartyCertification: {certificationPhoto: '',certificationLink: ''}},externalCommentsHeader: '',externalCommentsBody: '',externalCommentsFooter: '',pictureCount: '0',pictures: [],standardFeatures: [],optionPackages: [{optionPackageName: 'Technology Package',optionPackageItems: [{ optionPackageItem: 'USB Port Audio Interface Delete' },{ optionPackageItem: 'Radio: Chevrolet MyLink AM/FM Stereo w/CD Player' },{ optionPackageItem: 'Chevrolet MyLink' },{ optionPackageItem: 'Rear Vision Camera' }]},{optionPackageName: '1LT Driver Convenience Package',optionPackageItems: [{ optionPackageItem: 'Driver 6-Way Power Seat Adjuster (Fleet)' },{ optionPackageItem: 'Remote Vehicle Starter System' },{ optionPackageItem: 'Driver/Front Passenger Illuminated Vanity Mirrors' },{ optionPackageItem: 'Auto Dimming Inside Rearview Mirror' },{ optionPackageItem: 'Outside Heated Power-Adjustable Body-Color Mirrors' }]}],installedOptions: [{ installedOptionName: 'Engine: ECOTEC Turbo 1.4L DOHC VVT 4-Cylinder SMFI' },{ installedOptionName: 'Transmission: Electronic 6-Speed Automatic w/OD' },{ installedOptionName: 'CT/DE/ME/MD/MA/NJ/NY/OR/PA/RI/VT/WA Emissions Req' },{ installedOptionName: 'Cargo Net (LPO)' }],priceOne : {priceLabel:'MSRP',labelColor:'',strikeThrough:'true',price:'$22,210'},priceTwo : {priceLabel:'Internet Price',labelColor:'',price:'Contact Us'}},
{vehicleID:'927000',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/927000',dateAdded: '2015-02-07 00:00:00.0',vin: '1G1PC5SB9F7168973',stockNumber: 'Q0694',status: 'New',vehicleYear: '2015',make: 'Chevrolet',model: 'Cruze',modelCode: '1PX69',trim: '1LT Auto',driveTrain: 'FWD',previewPhoto: 'http://cache.automotive.stringcontent.com/cotillion/vehicle_photos/994b2869e88d446baa6f103c7c253137.jpg',videoURL: '',odometer: '10',transmission: 'Automatic',transmissionType: 'Automatic',bodyStyle: 'Sedan',rawBodyStyle: '',doorsType: '',exteriorColor: 'Tungsten Metallic',exteriorColorHex: '333230',interiorColor: 'Jet Blk Premium',interiorColorHex: '',engine: '1.4L I-4',certificationProgramImage: '',certificationProgramName: '',rebate: '',cityMPG: '26',hwyMPG: '38',isSpecial: '0',certifications: {dealerCertification: {certificationPhoto: '',certificationLink: ''},thirdPartyCertification: {certificationPhoto: '',certificationLink: ''}},externalCommentsHeader: '',externalCommentsBody: '',externalCommentsFooter: '',pictureCount: '0',pictures: [],standardFeatures: [],optionPackages: [{optionPackageName: 'Technology Package',optionPackageItems: [{ optionPackageItem: 'USB Port Audio Interface Delete' },{ optionPackageItem: 'Radio: Chevrolet MyLink AM/FM Stereo w/CD Player' },{ optionPackageItem: 'Chevrolet MyLink' },{ optionPackageItem: 'Rear Vision Camera' }]},{optionPackageName: '1LT Driver Convenience Package',optionPackageItems: [{ optionPackageItem: 'Driver 6-Way Power Seat Adjuster (Fleet)' },{ optionPackageItem: 'Remote Vehicle Starter System' },{ optionPackageItem: 'Driver/Front Passenger Illuminated Vanity Mirrors' },{ optionPackageItem: 'Auto Dimming Inside Rearview Mirror' },{ optionPackageItem: 'Outside Heated Power-Adjustable Body-Color Mirrors' }]}],installedOptions: [{ installedOptionName: 'Engine: ECOTEC Turbo 1.4L DOHC VVT 4-Cylinder SMFI' },{ installedOptionName: 'Transmission: Electronic 6-Speed Automatic w/OD' },{ installedOptionName: 'CT/DE/ME/MD/MA/NJ/NY/OR/PA/RI/VT/WA Emissions Req' },{ installedOptionName: 'Cargo Net (LPO)' }],priceOne : {priceLabel:'MSRP',labelColor:'',strikeThrough:'true',price:'$22,210'},priceTwo : {priceLabel:'Internet Price',labelColor:'',price:'$18,878'}}
]'
json <-
'[
{vehicleID:'1123724',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/1123724',dateAdded: '2015-06-19 00:00:00.0',vin: '1G1PC5SBXF7296543',stockNumber: 'Q1143',status: 'New',vehicleYear: '2015',make: 'Chevrolet',model: 'Cruze',modelCode: '1PX69',trim: '1LT Auto',driveTrain: 'FWD',previewPhoto: 'http://cache.automotive.stringcontent.com/cotillion/vehicle_photos/fe33c26872b4447da0e549f416e788ef.jpg',videoURL: '',odometer: '10',transmission: 'Automatic',transmissionType: 'Automatic',bodyStyle: 'Sedan',rawBodyStyle: '',doorsType: '',exteriorColor: 'Silver Ice Metallic',exteriorColorHex: 'c1c2c6',interiorColor: 'Jet Blk Premium',interiorColorHex: '',engine: '1.4L I-4',certificationProgramImage: '',certificationProgramName: '',rebate: '',cityMPG: '26',hwyMPG: '38',isSpecial: '0',certifications: {dealerCertification: {certificationPhoto: '',certificationLink: ''},thirdPartyCertification: {certificationPhoto: '',certificationLink: ''}},externalCommentsHeader: '',externalCommentsBody: '',externalCommentsFooter: '',pictureCount: '0',pictures: [],standardFeatures: [],optionPackages: [{optionPackageName: 'Technology Package',optionPackageItems: [{ optionPackageItem: 'USB Port Audio Interface Delete' },{ optionPackageItem: 'Radio: Chevrolet MyLink AM/FM Stereo w/CD Player' },{ optionPackageItem: 'Chevrolet MyLink' },{ optionPackageItem: 'Rear Vision Camera' }]},{optionPackageName: '1LT Driver Convenience Package',optionPackageItems: [{ optionPackageItem: 'Driver 6-Way Power Seat Adjuster (Fleet)' },{ optionPackageItem: 'Remote Vehicle Starter System' },{ optionPackageItem: 'Driver/Front Passenger Illuminated Vanity Mirrors' },{ optionPackageItem: 'Auto Dimming Inside Rearview Mirror' },{ optionPackageItem: 'Outside Heated Power-Adjustable Body-Color Mirrors' }]}],installedOptions: [{ installedOptionName: 'Engine: ECOTEC Turbo 1.4L DOHC VVT 4-Cylinder SMFI' },{ installedOptionName: 'Transmission: Electronic 6-Speed Automatic w/OD' },{ installedOptionName: 'CT/DE/ME/MD/MA/NJ/NY/OR/PA/RI/VT/WA Emissions Req' },{ installedOptionName: 'Cargo Net (LPO)' }],priceOne : {priceLabel:'MSRP',labelColor:'',strikeThrough:'true',price:'$22,210'},priceTwo : {priceLabel:'Internet Price',labelColor:'',price:'Contact Us'}},
{vehicleID:'927000',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/927000',dateAdded: '2015-02-07 00:00:00.0',vin: '1G1PC5SB9F7168973',stockNumber: 'Q0694',status: 'New',vehicleYear: '2015',make: 'Chevrolet',model: 'Cruze',modelCode: '1PX69',trim: '1LT Auto',driveTrain: 'FWD',previewPhoto: 'http://cache.automotive.stringcontent.com/cotillion/vehicle_photos/994b2869e88d446baa6f103c7c253137.jpg',videoURL: '',odometer: '10',transmission: 'Automatic',transmissionType: 'Automatic',bodyStyle: 'Sedan',rawBodyStyle: '',doorsType: '',exteriorColor: 'Tungsten Metallic',exteriorColorHex: '333230',interiorColor: 'Jet Blk Premium',interiorColorHex: '',engine: '1.4L I-4',certificationProgramImage: '',certificationProgramName: '',rebate: '',cityMPG: '26',hwyMPG: '38',isSpecial: '0',certifications: {dealerCertification: {certificationPhoto: '',certificationLink: ''},thirdPartyCertification: {certificationPhoto: '',certificationLink: ''}},externalCommentsHeader: '',externalCommentsBody: '',externalCommentsFooter: '',pictureCount: '0',pictures: [],standardFeatures: [],optionPackages: [{optionPackageName: 'Technology Package',optionPackageItems: [{ optionPackageItem: 'USB Port Audio Interface Delete' },{ optionPackageItem: 'Radio: Chevrolet MyLink AM/FM Stereo w/CD Player' },{ optionPackageItem: 'Chevrolet MyLink' },{ optionPackageItem: 'Rear Vision Camera' }]},{optionPackageName: '1LT Driver Convenience Package',optionPackageItems: [{ optionPackageItem: 'Driver 6-Way Power Seat Adjuster (Fleet)' },{ optionPackageItem: 'Remote Vehicle Starter System' },{ optionPackageItem: 'Driver/Front Passenger Illuminated Vanity Mirrors' },{ optionPackageItem: 'Auto Dimming Inside Rearview Mirror' },{ optionPackageItem: 'Outside Heated Power-Adjustable Body-Color Mirrors' }]}],installedOptions: [{ installedOptionName: 'Engine: ECOTEC Turbo 1.4L DOHC VVT 4-Cylinder SMFI' },{ installedOptionName: 'Transmission: Electronic 6-Speed Automatic w/OD' },{ installedOptionName: 'CT/DE/ME/MD/MA/NJ/NY/OR/PA/RI/VT/WA Emissions Req' },{ installedOptionName: 'Cargo Net (LPO)' }],priceOne : {priceLabel:'MSRP',labelColor:'',strikeThrough:'true',price:'$22,210'},priceTwo : {priceLabel:'Internet Price',labelColor:'',price:'$18,878'}}
]'
json <-
'[
{vehicleID:'1123724',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/1123724'},
{vehicleID:'927000',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/927000'}
]'
json <-
"[
{vehicleID:'1123724',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/1123724'},
{vehicleID:'927000',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/927000'}
]"
mydf <- fromJSON(json,flatten = TRUE)
myjson <- toJSON(mtcars)
validate(myjson) #
myjson
json <-
"[
{vehicleID:'1123724',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/1123724'},
{vehicleID:'927000',locationID:'260',title:'New 2015 Chevrolet Cruze 1LT Auto',url: '/Vehicle_Details/desc/New_Chevrolet_Cruze__/vehicleID/927000'}
]"
validate(json) #
url = "http://claychevrolet.com/New_Inventory"
doc = readLines(url)
#vin pattern, ie "vin: '...'"
vin_pattern = 'vin *[:=] *["\'][0-9A-Z]{17}["\']'
test = doc[grep(vin_pattern,doc)]
gregout = gregexpr(vin_pattern, test)
thematch = as.list(mapply(getexpr,test, gregout))
vins = gsub('vin *[:=] *["\']([0-9A-Z]{17})["\']', '\\1', thematch)
names(vins)=NULL
vins
nextLinks
?mapply
mapply(rep, 1:4, 4:1)
mapply(rep, 1:4, 2)
sapply(rep, 1:4, 2)
mapply(rep, times = 1:4, MoreArgs = list(x = 42))
?intersect
(x <- c(sort(sample(1:20, 9)), NA))
(y <- c(sort(sample(3:23, 7)), NA))
union(x, y)
intersect(x, y)
setdiff(x, y)
setdiff(y, x)
setequal(x, y)
mapply(intersect,nextLinks,rep(url,length(nextLinks)))
intersect(url,nextLinks[1])
url
nextLinks[1]
install.packages("qualV")
library(qualV)
data(phyto)
bbobs    <- dpill(obs$t, obs$y)
bbobs
?dpill
n        <- tail(obs$t, n = 1) - obs$t[1] + 1
obsdpill <- ksmooth(obs$t, obs$y, kernel = "normal", bandwidth = bbobs,
n.points = n)
obss     <- data.frame(t = obsdpill$x, y = obsdpill$y)
obss     <- obss[match(sim$t, obss$t),]
obs_f1   <- f.slope(obss$t, obss$y)
sim_f1   <- f.slope(sim$t, sim$y)
lcs      <- LCS(obs_f1, sim_f1)
lcs
install.packages("Biostrings")
biocLite("BiocUpgrade")
source("http://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
library("Biostrings")
biocLite("Biostrings")
library(Biostrings)
lcsubstr(url,nextLinks[1])
lcsubstr(BString(url),BString(nextLinks[1]))
?stringi
'a'%in%'abc'
str_extract(url,'.com/(.*)')
library(stringr)
str_extract(url,'.com/(.*)')
str_extract(url,'com/')
url
str_extract(url,'http')
paris_tweets = c(
"#Paris is chock-full of cultural and culinary attractions",
"Some time in #Paris along Canal St.-Martin famous by #Amelie",
"While you're in #Paris, stop at cafe: http://goo.gl/yaCbW",
"Paris, the city of light")
str_extract_all(paris_tweets, "#[a-zA-Z]{1,}")
x <- list(c(1,2,4),c(1,3,5),c(0,1,0),
c(1,3,6,5),c(3,4,4,4),c(0,1,0,1),
c(3,7),c(1,2),c(0,1))
data <- matrix(x,byrow=TRUE,nrow=3)
colnames(data) <- c("First", "Length", "Value")
rownames(data) <- c("Case1", "Case2", "Case3")
data
colnames(data) <- c("Dealer1", "Dealer2", "Dealer3")
rownames(data) <- c("VIN", "Make", "Model")
x <- list(c(11231231,223414134,412341234),c(13123,31413241,514234),c(1321312,14123414,0)143132413,
c('Honda','Honda','Honda'),c('Ford','Ford','Ford'),c('Toyota','Toyota','Toyota'),
c('EV1','EV1','EV1'),c('EV2','EV2','EV2'),c('EV3','EV3','EV3'))
x <- list(c(11231231,223414134,412341234),c(13123,31413241,514234),c(1321312,14123414,143132413),
c('Honda','Honda','Honda'),c('Ford','Ford','Ford'),c('Toyota','Toyota','Toyota'),
c('EV1','EV1','EV1'),c('EV2','EV2','EV2'),c('EV3','EV3','EV3'))
data <- matrix(x,byrow=TRUE,nrow=3)
colnames(data) <- c("Dealer1", "Dealer2", "Dealer3")
rownames(data) <- c("VIN", "Make", "Model")
data
x <- list(c(1,2,4),c(1,3,5),c(0,1,0),
c(1,3,6,5),c(3,4,4,4),c(0,1,0,1),
c(3,7),c(1,2),c(0,1))
data <- matrix(x,byrow=TRUE,nrow=3)
colnames(data) <- c("First", "Length", "Value")
rownames(data) <- c("Case1", "Case2", "Case3")
data
data.frame(Case=rep(rownames(data),lengths),
Sequence=sequence(lengths),
lapply(split(data,colnames(data)[col(data)]), unlist),
row.names=NULL)
lengths<-sapply(data[,1],length)
lengths
data[,1]
data.frame(Case=rep(rownames(data),lengths),
Sequence=sequence(lengths),
lapply(split(data,colnames(data)[col(data)]), unlist),
row.names=NULL)
col(data)
colnames(data)[col(data)])
colnames(data)[col(data)]
split(data,colnames(data)[col(data)])
lapply(split(data,colnames(data)[col(data)]), unlist),
lapply(split(data,colnames(data)[col(data)]), unlist)
colnames(data)[col(data)]
colnames(data)
[col(data)]
col(data)
row(data)
col(data)
colnames(data)[col(data)])
colnames(data)[col(data)]
colnames(data)[row(data)]
split(data,colnames(data)[row(data)]
)
lapply(split(data,colnames(data)[row(data)]), unlist)
lapply(split(data,colnames(data)[col(data)]), unlist)
data
lengths
x <- list(c(11231231,223414134,412341234),c(13123,31413241,514234),c(1321312,14123414,143132413),
c('Honda','Honda','Honda'),c('Ford','Ford','Ford'),c('Toyota','Toyota','Toyota'),
c('EV1','EV1','EV1'),c('EV2','EV2','EV2'),c('EV3','EV3','EV3'))
data <- matrix(x,byrow=TRUE,nrow=3)
colnames(data) <- c("Dealer1", "Dealer2", "Dealer3")
rownames(data) <- c("VIN", "Make", "Model")
data
x <- list(c(11231231,223414134,412341234),c(13123,31413241,514234,3424235),c(1321312,14123414,143132413,12313234,3123235),
c('Honda','Honda','Honda'),c('Ford','Ford','Ford','Ford'),c('Toyota','Toyota','Toyota','Toyota','Toyota'),
c('EV1','EV1','EV1'),c('EV2','EV2','EV2','EV2'),c('EV3','EV3','EV3','EV3','EV3'))
data <- matrix(x,byrow=TRUE,nrow=3)
colnames(data) <- c("Dealer1", "Dealer2", "Dealer3")
rownames(data) <- c("VIN", "Make", "Model")
data
data.frame(Dealership=rep(colnames(data),lengths),
lapply(split(data,rownames(data)[row(data)]), unlist),
row.names=NULL)
row(data)
rep(colnames(data),lengths)
lengths<-sapply(data[1,],length)
rep(colnames(data),lengths)
data.frame(Dealership=rep(colnames(data),lengths),
lapply(split(data,rownames(data)[row(data)]), unlist),
row.names=NULL)
library(leaflet)
library(dplyr)
test <- madata %>%
select(Dealership, Address, GeoLatitude, GeoLongitude) %>%
distinct()
load('finalMA.rdata')
setwd("~/Desktop/Project/RShiny/EVdashboard")
test <- madata %>%
select(Dealership, Address, GeoLatitude, GeoLongitude) %>%
distinct()
load('finalMA.rdata')
test <- madata %>%
select(Dealership, Address, GeoLatitude, GeoLongitude) %>%
distinct()
leaflet(test) %>%
addTiles() %>%
addMarkers(lng = ~GeoLongitude, lat = ~GeoLatitude)
leaflet(test[1:20,]) %>%
addTiles() %>%
addMarkers(lng = ~GeoLongitude, lat = ~GeoLatitude)
leaflet(test[1:50,]) %>%
addTiles() %>%
addMarkers(lng = ~GeoLongitude, lat = ~GeoLatitude)
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinyApp)
library(ShinyApp)
library(shinyapps)
deployApp()
deployApp()
library(leaflet)
leaflet() %>% addTiles() %>% addLegend(
position = 'bottomright',
colors = rgb(t(col2rgb(palette())) / 255),
labels = palette(), opacity = 1,
title = 'An Obvious Legend'
)
leaflet() %>% addTiles() %>% addControl(
position = 'bottomright'
)
leaflet(test[1:50,],padding = 50) %>%
addTiles() %>%
addMarkers(lng = ~GeoLongitude, lat = ~GeoLatitude)
leaflet(test[1:50,],padding = 10) %>%
addTiles() %>%
addMarkers(lng = ~GeoLongitude, lat = ~GeoLatitude)
leaflet(test[1:50,],padding = c(0,0,0,30)) %>%
addTiles() %>%
addMarkers(lng = ~GeoLongitude, lat = ~GeoLatitude)
})
runApp()
leaflet(test[1:50,],padding = c(0,0,0,100)) %>%
addTiles() %>%
addMarkers(lng = ~GeoLongitude, lat = ~GeoLatitude)
teat[1:4,]
test[1:4,]
gsub("(.*/)us.*",'\\1',mainurl)
mainurl = "http://content.dealerconnection.com/vfs/brands/us_ford_en.html"
gsub("(.*/)us.*",'\\1',mainurl)
txt <- htmlParse(mainurl)
require(XML)
txt <- htmlParse(mainurl)
getHTMLLinks(txt)
unname(sapply(links, function(link) paste0(baseurl,link)))
links <- getHTMLLinks(txt)
unname(sapply(links, function(link) paste0(baseurl,link)))
baseurl = gsub("(.*/)us.*",'\\1',mainurl)
unname(sapply(links, function(link) paste0(baseurl,link)))
url = "http://content.dealerconnection.com/vfs/brands/us/ca_ford_en.html"
doc <- htmlParse(url)
getHTMLLinks(doc)
unique(getHTMLLinks(doc))
length(getHTMLLinks(doc))
getHTMLLinks(doc)[-1]
gsub('(.*us/).*','\\1',url)
links <- getHTMLLinks(doc)[-1]
unname(sapply(links, function(link) paste0(citybaseurl,link)))
citybaseurl = gsub('(.*us/).*','\\1',url)
unname(sapply(links, function(link) paste0(citybaseurl,link)))
}
url = "http://content.dealerconnection.com/vfs/brands/us/ca/san_francisco_ford_en.html"
doc <- htmlParse(url)
getHTMLLinks(doc)
getHTMLLinks(doc)[-c(1:2)]
unique(getHTMLLinks(doc)[-c(1:2)])
links[grepl(pattern = 'com$',links)]
links <- unique(getHTMLLinks(doc)[-c(1:2)])
links[grepl(pattern = 'com$',links)]
dealerNameNodes = getNodeSet(doc,'//div[@class="dealerName"]/text()')
length(dealerNameNodes)
dealerNameNodes
dealerNameNodes = getNodeSet(doc,'//div[@class="dealerName"]/a/text()')
dealerNameNodes
dealerNameNodes = getNodeSet(doc,'//div[@class="dealerName"]/b/a/text()')
dealerNameNodes
xmlSApply(dealerNameNodes,xmlValue,trim=T)
getNodeSet(doc,'//div[@class="dealerAddress"]/text()')
getNodeSet(doc,'//div[@class="dealerAddress"]/label/text()')
getNodeSet(doc,'//div[@class="dealerAddress"]/label[not contains(./text(),"Distance" or "Miles")]/text()')
AddressNodes = getNodeSet(doc,'//div[@class="dealerAddress"]/label[contains(./text(),"Distance" or "Miles")]/text()')
getNodeSet(doc,'//div[@class="dealerAddress"]/label[contains(./text(),"Distance" or "Miles")]/text()')
getNodeSet(doc,'//div[@class="dealerAddress"]/label[1]/text()')
AddressNodes_road = getNodeSet(doc,'//div[@class="dealerAddress"]/label[1]/text()')
dealer_road = xmlSApply(AddressNodes_road,xmlValue,trim=T)
dealer_road
AddressNodes_city = getNodeSet(doc,'//div[@class="dealerAddress"]/label[2]/text()')
dealer_city = xmlSApply(AddressNodes_city,xmlValue,trim=T)
AddressNodes_state = getNodeSet(doc,'//div[@class="dealerAddress"]/label[4]/text()')
dealer_state = xmlSApply(AddressNodes_state,xmlValue,trim=T)
AddressNodes_zipcode = getNodeSet(doc,'//div[@class="dealerAddress"]/label[4]/text()')
dealer_zipcode = xmlSApply(AddressNodes_zipcode,xmlValue,trim=T)
dealer_zipcode
AddressNodes_zipcode = getNodeSet(doc,'//div[@class="dealerAddress"]/label[5]/text()')
dealer_zipcode = xmlSApply(AddressNodes_zipcode,xmlValue,trim=T)
dealer_zipcode
dealerAddress = mapply(dealer_road,dealer_city,dealer_state,dealer_zipcode, function(road,city,state,zipcode)
paste0(road,', ',city,', ',state,' ',zipcode))
dealerAddress = paste0(dealer_road,', ',dealer_city,', ',dealer_state,' ',dealer_zipcode))
dealerAddress = paste0(dealer_road,', ',dealer_city,', ',dealer_state,' ',dealer_zipcode)
dealerAddress
DealerWebsiteNodes = getNodeSet(doc, '//ul[class="dealerListingListing dealerCities"]/li/a')
DealerWebsiteNodes
DealerWebsiteNodes = getNodeSet(doc, '//ul[class="dealerListingListing dealerCities"]/li[1]/a')
DealerWebsiteNodes
getNodeSet(doc, '//ul[class="dealerListingListing dealerCities"]/li[1]/a/text()')
getNodeSet(doc, '//ul[class="dealerListingListing"]/li[1]/a/text()')
getNodeSet(doc,'//div[@class="dealerAddress"]/label[5]/text()')
getNodeSet(doc, '//div//ul[class="dealerListingListing"]/li[1]/a/text()')
DealerWebsiteNodes = getNodeSet(doc, '//div[class="dealerListing"]/ul[class="dealerListingListing dealerCities"]/li[1]/a/text()')
DealerWebsiteNodes
DealerWebsiteNodes = getNodeSet(doc, '//div[class="dealerListing"]/ul/li[1]/a/text()')
DealerWebsiteNodes
getNodeSet(doc, '//div[class="dealerListing"]/ul')
getNodeSet(doc, '//div[class="dealerListing"]/div[@class="dealerName"]')
getNodeSet(doc,'//div[@class="dealerName"]/b/a/text()')
DealerWebsiteNodes = getNodeSet(doc, '//ul[class="dealerListingListing dealerCities"]/li[1]/text()')
DealerWebsiteNodes
getNodeSet(doc, '//div/div/ul[class="dealerListingListing dealerCities"]/li[1]/text()')
getNodeSet(doc, '//div[@class="dealerAddress"]')
getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]')
getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]/li[1]/a')
DealerWebsiteNodes = getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]/li[1]/a')
xmlSApply(DealerWebsiteNodes,xmlGetAttr,"href")
dealerInventoryLink = getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]/li[2]/a')
DealerWebsiteINNodes= getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]/li[2]/a')
dealerInventoryLink =  xmlSApply(DealerWebsiteINNodes,xmlGetAttr,"href")
dealerInventoryLink
zipcode = gsub('.*([0-9]{5}).*','\\1',dealerAddress)
zipcode
df <- data.frame(dealerName, dealerAddress, dealerWebsite,zipcode, dealerInventoryLink )
dealerName = xmlSApply(dealerNameNodes,xmlValue,trim=T)
df <- data.frame(dealerName, dealerAddress, dealerWebsite,zipcode, dealerInventoryLink )
dealerWebsite =   xmlSApply(DealerWebsiteNodes,xmlGetAttr,"href")
df <- data.frame(dealerName, dealerAddress, dealerWebsite,zipcode, dealerInventoryLink )
colnames(df) = c("Dealer","Address","Link","zipcode","IV_link" )
head(df)
statelinks
txt <- htmlParse(mainurl)
links <- getHTMLLinks(txt)
statelinks <- unname(sapply(links, function(link) paste0(baseurl,link)))
length(statelinks)
require(plry)
require(plyr)
require(dplyr)
mainurl = "http://content.dealerconnection.com/vfs/brands/us_ford_en.html"
baseurl = gsub("(.*/)us.*",'\\1',mainurl)
txt <- htmlParse(mainurl)
links <- getHTMLLinks(txt)
statelinks <- unname(sapply(links, function(link) paste0(baseurl,link)))
getcitylinks <- function(url){
citybaseurl = gsub('(.*us/).*','\\1',url)
doc <- htmlParse(url)
links <- getHTMLLinks(doc)[-1]
citylinks <- unname(sapply(links, function(link) paste0(citybaseurl,link)))
return(citylinks)
}
#url = "http://content.dealerconnection.com/vfs/brands/us/ca/san_francisco_ford_en.html"
getdealerinfor <- function(url){
doc <- htmlParse(url)
links <- unique(getHTMLLinks(doc)[-c(1:2)])
#dealerlink <- links[grepl(pattern = 'com$',links)]
dealerNameNodes = getNodeSet(doc,'//div[@class="dealerName"]/b/a/text()')
dealerName = xmlSApply(dealerNameNodes,xmlValue,trim=T)
AddressNodes_road = getNodeSet(doc,'//div[@class="dealerAddress"]/label[1]/text()')
dealer_road = xmlSApply(AddressNodes_road,xmlValue,trim=T)
AddressNodes_city = getNodeSet(doc,'//div[@class="dealerAddress"]/label[2]/text()')
dealer_city = xmlSApply(AddressNodes_city,xmlValue,trim=T)
AddressNodes_state = getNodeSet(doc,'//div[@class="dealerAddress"]/label[4]/text()')
dealer_state = xmlSApply(AddressNodes_state,xmlValue,trim=T)
AddressNodes_zipcode = getNodeSet(doc,'//div[@class="dealerAddress"]/label[5]/text()')
dealer_zipcode = xmlSApply(AddressNodes_zipcode,xmlValue,trim=T)
dealerAddress = paste0(dealer_road,', ',dealer_city,', ',dealer_state,' ',dealer_zipcode)
DealerWebsiteNodes = getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]/li[1]/a')
dealerWebsite =   xmlSApply(DealerWebsiteNodes,xmlGetAttr,"href")
DealerWebsiteINNodes= getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]/li[2]/a')
dealerInventoryLink =  xmlSApply(DealerWebsiteINNodes,xmlGetAttr,"href")
zipcode = gsub('.*([0-9]{5}).*','\\1',dealerAddress)
df <- data.frame(dealerName, dealerAddress, dealerWebsite,zipcode, dealerInventoryLink )
colnames(df) = c("Dealer","Address","Link","zipcode","IV_link" )
return(df)
}
allcity_links = unname(sapply(statelinks,getcitylinks))
fordDealer = ldply(allcity_links,getdealerinfor)
allcity_links[0:10]
allcity_links
statelinks
allcity_links = unlist(unname(sapply(statelinks,getcitylinks)))
allcity_links[1:50]
length(allcity_links)
unique(allcity_links)
fordDealer = ldply(allcity_links,getdealerinfor)
getdealerinfor <- function(url){
print(url)
doc <- htmlParse(url)
links <- unique(getHTMLLinks(doc)[-c(1:2)])
#dealerlink <- links[grepl(pattern = 'com$',links)]
dealerNameNodes = getNodeSet(doc,'//div[@class="dealerName"]/b/a/text()')
dealerName = xmlSApply(dealerNameNodes,xmlValue,trim=T)
AddressNodes_road = getNodeSet(doc,'//div[@class="dealerAddress"]/label[1]/text()')
dealer_road = xmlSApply(AddressNodes_road,xmlValue,trim=T)
AddressNodes_city = getNodeSet(doc,'//div[@class="dealerAddress"]/label[2]/text()')
dealer_city = xmlSApply(AddressNodes_city,xmlValue,trim=T)
AddressNodes_state = getNodeSet(doc,'//div[@class="dealerAddress"]/label[4]/text()')
dealer_state = xmlSApply(AddressNodes_state,xmlValue,trim=T)
AddressNodes_zipcode = getNodeSet(doc,'//div[@class="dealerAddress"]/label[5]/text()')
dealer_zipcode = xmlSApply(AddressNodes_zipcode,xmlValue,trim=T)
dealerAddress = paste0(dealer_road,', ',dealer_city,', ',dealer_state,' ',dealer_zipcode)
DealerWebsiteNodes = getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]/li[1]/a')
dealerWebsite =   xmlSApply(DealerWebsiteNodes,xmlGetAttr,"href")
DealerWebsiteINNodes= getNodeSet(doc, '//ul[@class="dealerListingListing dealerCities"]/li[2]/a')
dealerInventoryLink =  xmlSApply(DealerWebsiteINNodes,xmlGetAttr,"href")
zipcode = gsub('.*([0-9]{5}).*','\\1',dealerAddress)
df <- data.frame(dealerName, dealerAddress, dealerWebsite,zipcode, dealerInventoryLink )
colnames(df) = c("Dealer","Address","Link","zipcode","IV_link" )
return(df)
}
fordDealer = ldply(allcity_links,getdealerinfor)
head(fordDealer)
dim(fordDealer)
dim(fordDealer[!duplicated(fordDealer$Address),])
load("zipcode.rdata")
load("zipdata.rdata")
setwd("~/Desktop/InternPI/Dealership-Scraping")
load("zipdata.rdata")
head(zipdata)
names(foldDealer)
names(fordDealer)
tt = merge(fordDealer, zipdata)
unique(fordDealer$Address)
length(unique(fordDealer$Address))
fordDealer = fordDealer[!duplicated(fordDealer$Address),]
tt = merge(fordDealer, zipdata)
sapply(fordDealer$zipcode, length)
unique(sapply(fordDealer$zipcode, nchar))
unique(sapply(as.character(fordDealer$zipcode), nchar))
diff(fordDealer$Dealer, tt$Dealer)
setdiff(fordDealer$Dealer,tt$Dealer)
fordDealer[fordDealer$Dealer%in%setdiff(fordDealer$Dealer,tt$Dealer),]$zipcode
zipdata[zipdata$zipcode == 00190, ]
zipdata[zipdata$zipcode == 61902, ]
library(noncensus)
install.packages(noncensus)
fordDealer[fordDealer$Dealer%in%setdiff(fordDealer$Dealer,tt$Dealer),]$Link
fordDealer[fordDealer$Dealer%in%setdiff(fordDealer$Dealer,tt$Dealer),]$Address
fordDealer[fordDealer$Dealer%in%setdiff(fordDealer$Dealer,tt$Dealer),]$zipcode = c(08070,56156)
fordDealer = as.data.frame(fordDealer, stringAsFactors=F)
class(fordDealer$Address)
fordDealer = as.data.frame(fordDealer, stringsAsFactors=F)
class(fordDealer$Address)
fordDealer = as.data.frame(fordDealer, stringsAsFactors=F)
class(fordDealer$Address)
fordDealer[] <- lapply(fordDealer, as.character)
class(fordDealer$Address)
fordDealer[fordDealer$Dealer%in%setdiff(fordDealer$Dealer,tt$Dealer),]$zipcode = c(08070,56156)
tt = merge(fordDealer, zipdata)
setdiff(fordDealer$Dealer,tt$Dealer)
zipdata[zipdata$zipcode == 08070, ]
View(zipdata)
zipdata[zipdata$city =="Pennsville"&state=="NJ", ]
zipdata[zipdata$city =="Pennsville"&zipdata$state=="NJ", ]
fordDealer[fordDealer$Dealer%in%setdiff(fordDealer$Dealer,tt$Dealer),]$zipcode
fordDealer[fordDealer$Dealer%in%setdiff(fordDealer$Dealer,tt$Dealer),]$zipcode = c("08070","56156")
fordDealer[fordDealer$Dealer%in%c("Bayshore Ford","Herman Motor Co."),]$zipcode = c("08070","56156")
tt = merge(fordDealer, zipdata)
fordDealer$Dealer[fordDealer$state = "MA"]
fordDealer$Dealer[fordDealer$state == "MA"]
names(fordDealer)
tt$Dealer[tt$state == "MA"]
